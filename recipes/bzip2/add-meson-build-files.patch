From 6c85a583572229922ff685f353feedbeaeecf0d9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tim-Philipp=20M=C3=BCller?= <tim@centricular.com>
Date: Fri, 15 Apr 2016 11:24:29 +0100
Subject: [PATCH 01/12] bzlib.h: don't use WINAPI and add
 __declspec(dllexport/dllimport)

windows.h does #define WINAPI __stdcall but we want
the __cdecl ABI. Causes linking problems on 32-bit
windows otherwise when consumed by MSVC.

Also sprinkle explicit dllexport/dllimport which will be
needed if compiled with MSVC (mingw exports all symbols
by default, but MSVC doesn't).
---
 bzlib.h | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/bzlib.h b/bzlib.h
index 8277123..219a94f 100644
--- a/bzlib.h
+++ b/bzlib.h
@@ -82,12 +82,12 @@ typedef
 #      undef small
 #   endif
 #   ifdef BZ_EXPORT
-#   define BZ_API(func) WINAPI func
-#   define BZ_EXTERN extern
+#   define BZ_API(func) func
+#   define BZ_EXTERN __declspec(dllexport) extern
 #   else
    /* import windows dll dynamically */
-#   define BZ_API(func) (WINAPI * func)
-#   define BZ_EXTERN
+#   define BZ_API(func) ( * func)
+#   define BZ_EXTERN __declspec(dllimport) extern
 #   endif
 #else
 #   define BZ_API(func) func
-- 
2.19.1


From 48f1c5863d1f8ec32f682d010dbe772a9d46e0bb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tim-Philipp=20M=C3=BCller?= <tim@centricular.com>
Date: Fri, 15 Apr 2016 11:26:43 +0100
Subject: [PATCH 02/12] meson: add meson build for bz2

---
 meson.build | 77 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 77 insertions(+)
 create mode 100644 meson.build

diff --git a/meson.build b/meson.build
new file mode 100644
index 0000000..7f70507
--- /dev/null
+++ b/meson.build
@@ -0,0 +1,77 @@
+project('bzip2', 'c', version : '1.0.6')
+
+bzip2_sources = [
+  'blocksort.c',
+  'huffman.c',
+  'crctable.c',
+  'randtable.c',
+  'compress.c',
+  'decompress.c',
+  'bzlib.c'
+]
+
+libversion = meson.project_version()
+soversion = '1.0'
+
+bz2_c_args = ['-D_FILE_OFFSET_BITS=64']
+
+cc = meson.get_compiler('c')
+if cc.get_id() == 'gcc' or cc.get_id() == 'clang'
+  # bzip2.c:557: warning: variable nread set but not used
+  bz2_c_args += ['-Wno-unused-but-set-variable']
+endif
+
+bz2_incs = include_directories('.')
+
+install_headers(['bzlib.h'])
+
+libtype = 'both' # FIXME: make option
+
+if libtype != 'shared'
+  libbz2_shared = shared_library('bz2', bzip2_sources,
+    version : libversion,
+    soversion : soversion,
+    c_args : bz2_c_args,
+    include_directories : bz2_incs,
+    install : true,
+#    dependencies : mathlib,
+#    vs_module_defs: vs_module_defs_dir + 'libbz2.def',
+  )
+  libbz2 = libbz2_shared
+endif
+
+if libtype != 'static'
+  libbz2_static = static_library('bz2', bzip2_sources,
+    c_args : bz2_c_args,
+    include_directories : bz2_incs,
+    install : true,
+#    dependencies : mathlib,
+  )
+  libbz2 = libbz2_static
+endif
+
+bz2_dep = declare_dependency(link_with : libbz2, include_directories : bz2_incs)
+
+executable('bzip2', 'bzip2.c',
+  install : true,
+  dependencies : bz2_dep,
+  c_args: bz2_c_args)
+
+executable('bunzip2', 'bzip2.c',
+  install : true,
+  dependencies : bz2_dep,
+  c_args: bz2_c_args)
+
+executable('bzcat', 'bzip2.c',
+  install : true,
+  dependencies : bz2_dep,
+  c_args: bz2_c_args)
+
+executable('bzip2recover', 'bzip2recover.c',
+  install : true,
+  c_args: bz2_c_args)
+
+install_man('bzdiff.1', 'bzgrep.1', 'bzip2.1', 'bzmore.1')
+install_data('bzgrep', 'bzmore', 'bzdiff', install_dir : 'bin')
+
+# FIXME: build docs
-- 
2.19.1


From 28dba9f327e19a9cd13a9259a1f59d65b36bd7d8 Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Fri, 17 Jun 2016 15:55:36 +0530
Subject: [PATCH 03/12] bzlib.h: Don't need to #include windows.h anymore

We no longer use the WINAPI macro
---
 bzlib.h | 5 -----
 1 file changed, 5 deletions(-)

diff --git a/bzlib.h b/bzlib.h
index 219a94f..955baf4 100644
--- a/bzlib.h
+++ b/bzlib.h
@@ -76,11 +76,6 @@ typedef
 #endif
 
 #ifdef _WIN32
-#   include <windows.h>
-#   ifdef small
-      /* windows.h define small to char */
-#      undef small
-#   endif
 #   ifdef BZ_EXPORT
 #   define BZ_API(func) func
 #   define BZ_EXTERN __declspec(dllexport) extern
-- 
2.19.1


From 580d70a187dab25820523e88af26dea67e047fd8 Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Fri, 17 Jun 2016 15:57:54 +0530
Subject: [PATCH 04/12] bzlib.h: Don't use dllimport/dllexport when
 BZ_STATIC_COMPILATION is defined

This allows code to see the correct prototypes for linking to the static
library on Windows. Without this, it'll try to link to the static
library with indirections required for accessing symbols in a DLL and
fail to find those symbols.
---
 bzlib.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/bzlib.h b/bzlib.h
index 955baf4..acc6bf8 100644
--- a/bzlib.h
+++ b/bzlib.h
@@ -75,7 +75,8 @@ typedef
 #include <stdio.h>
 #endif
 
-#ifdef _WIN32
+/* Define BZ_STATIC_COMPILATION if linking to libbz2 statically */
+#if defined(_WIN32) && !defined(BZ_STATIC_COMPILATION)
 #   ifdef BZ_EXPORT
 #   define BZ_API(func) func
 #   define BZ_EXTERN __declspec(dllexport) extern
-- 
2.19.1


From e51a4a15b20abf422fba043cdd5b8f2ebd537872 Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Fri, 17 Jun 2016 15:59:11 +0530
Subject: [PATCH 05/12] meson: soversion should be an unsigned integer

Either as an integer, or as a string containing an integer
---
 meson.build | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/meson.build b/meson.build
index 7f70507..8146535 100644
--- a/meson.build
+++ b/meson.build
@@ -11,7 +11,7 @@ bzip2_sources = [
 ]
 
 libversion = meson.project_version()
-soversion = '1.0'
+soversion = '1'
 
 bz2_c_args = ['-D_FILE_OFFSET_BITS=64']
 
-- 
2.19.1


From 4d9a917d818c45a008ad20121fbdfb45ac04c5cb Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Fri, 17 Jun 2016 16:00:21 +0530
Subject: [PATCH 06/12] meson: Ignore warnings about 'insecure functions' that
 are used everywhere by bz2

---
 meson.build | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/meson.build b/meson.build
index 8146535..bc333c5 100644
--- a/meson.build
+++ b/meson.build
@@ -19,6 +19,9 @@ cc = meson.get_compiler('c')
 if cc.get_id() == 'gcc' or cc.get_id() == 'clang'
   # bzip2.c:557: warning: variable nread set but not used
   bz2_c_args += ['-Wno-unused-but-set-variable']
+elif cc.get_id() == 'msvc'
+  # Ignore C4996 about "insecure functions"
+  bz2_c_args += ['/wd4996']
 endif
 
 bz2_incs = include_directories('.')
-- 
2.19.1


From aca8425eab7095c97980d83edf3527d06617768e Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Thu, 13 Dec 2018 20:19:18 +0530
Subject: [PATCH 07/12] Update to latest meson, fix MSVC support, etc.

---
 meson.build | 61 ++++++++++++++++++++++++-----------------------------
 1 file changed, 27 insertions(+), 34 deletions(-)

diff --git a/meson.build b/meson.build
index bc333c5..c2cb942 100644
--- a/meson.build
+++ b/meson.build
@@ -1,4 +1,4 @@
-project('bzip2', 'c', version : '1.0.6')
+project('bzip2', 'c', version : '1.0.6', meson_version : '>=0.49')
 
 bzip2_sources = [
   'blocksort.c',
@@ -10,50 +10,42 @@ bzip2_sources = [
   'bzlib.c'
 ]
 
-libversion = meson.project_version()
-soversion = '1'
-
-bz2_c_args = ['-D_FILE_OFFSET_BITS=64']
+bz2_c_args = []
 
 cc = meson.get_compiler('c')
-if cc.get_id() == 'gcc' or cc.get_id() == 'clang'
-  # bzip2.c:557: warning: variable nread set but not used
-  bz2_c_args += ['-Wno-unused-but-set-variable']
-elif cc.get_id() == 'msvc'
+if cc.get_id() == 'msvc'
   # Ignore C4996 about "insecure functions"
   bz2_c_args += ['/wd4996']
+else
+  # bzip2.c:557: warning: variable nread set but not used
+  bz2_c_args += ['-Wno-unused-but-set-variable']
 endif
 
 bz2_incs = include_directories('.')
 
 install_headers(['bzlib.h'])
 
-libtype = 'both' # FIXME: make option
-
-if libtype != 'shared'
-  libbz2_shared = shared_library('bz2', bzip2_sources,
-    version : libversion,
-    soversion : soversion,
-    c_args : bz2_c_args,
-    include_directories : bz2_incs,
-    install : true,
-#    dependencies : mathlib,
-#    vs_module_defs: vs_module_defs_dir + 'libbz2.def',
-  )
-  libbz2 = libbz2_shared
-endif
-
-if libtype != 'static'
-  libbz2_static = static_library('bz2', bzip2_sources,
-    c_args : bz2_c_args,
-    include_directories : bz2_incs,
-    install : true,
-#    dependencies : mathlib,
-  )
-  libbz2 = libbz2_static
+# libbz2 is unversioned on Windows
+libkwargs = {}
+if host_machine.system() != 'windows'
+  libkwargs = {'version': meson.project_version()}
 endif
 
-bz2_dep = declare_dependency(link_with : libbz2, include_directories : bz2_incs)
+libbz2 = library('bz2', bzip2_sources,
+  c_args : bz2_c_args,
+  include_directories : bz2_incs,
+  install : true,
+  vs_module_defs : 'libbz2.def',
+  kwargs : libkwargs,
+)
+
+bz2_dep = declare_dependency(link_with : libbz2,
+                             include_directories : bz2_incs)
+pkg = import('pkgconfig')
+pkg.generate(name: 'bzip2',
+             description: 'bzip2 data compression library',
+             version: meson.project_version(),
+             libraries: libbz2)
 
 executable('bzip2', 'bzip2.c',
   install : true,
@@ -75,6 +67,7 @@ executable('bzip2recover', 'bzip2recover.c',
   c_args: bz2_c_args)
 
 install_man('bzdiff.1', 'bzgrep.1', 'bzip2.1', 'bzmore.1')
-install_data('bzgrep', 'bzmore', 'bzdiff', install_dir : 'bin')
+install_data('bzgrep', 'bzmore', 'bzdiff', install_dir : 'bin',
+             install_mode : 'rwxr-xr-x')
 
 # FIXME: build docs
-- 
2.19.1


From 70ca7688f527cf17078b6e6551ef7800550a3e0a Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Thu, 13 Dec 2018 20:22:55 +0530
Subject: [PATCH 08/12] Don't use __declspec(dllimport/export) for symbol
 exporting

This partially reverts commit 42f2a11dbe251cea54844a987ca0e0715b1d8ca9.

We can just use the .def file, which also has the advantage of not
needing to build object files twice: once for shared and once for
static.
---
 bzlib.h | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/bzlib.h b/bzlib.h
index acc6bf8..8a0363d 100644
--- a/bzlib.h
+++ b/bzlib.h
@@ -75,15 +75,14 @@ typedef
 #include <stdio.h>
 #endif
 
-/* Define BZ_STATIC_COMPILATION if linking to libbz2 statically */
-#if defined(_WIN32) && !defined(BZ_STATIC_COMPILATION)
+#if defined(_WIN32)
 #   ifdef BZ_EXPORT
 #   define BZ_API(func) func
-#   define BZ_EXTERN __declspec(dllexport) extern
+#   define BZ_EXTERN extern
 #   else
    /* import windows dll dynamically */
 #   define BZ_API(func) ( * func)
-#   define BZ_EXTERN __declspec(dllimport) extern
+#   define BZ_EXTERN
 #   endif
 #else
 #   define BZ_API(func) func
-- 
2.19.1


From ed95413aa0bd4d6f435b53429cf56dcdea98834b Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Thu, 13 Dec 2018 20:26:34 +0530
Subject: [PATCH 09/12] libbz2.def: Don't encode the library name

With MSVC we output bz2.dll, not libbz2.dll
---
 libbz2.def | 1 -
 1 file changed, 1 deletion(-)

diff --git a/libbz2.def b/libbz2.def
index 2dc0dd8..6e4ddf6 100644
--- a/libbz2.def
+++ b/libbz2.def
@@ -1,4 +1,3 @@
-LIBRARY			LIBBZ2
 DESCRIPTION		"libbzip2: library for data compression"
 EXPORTS
 	BZ2_bzCompressInit
-- 
2.19.1


From 9984c2128e15d309a85922599d54366387265c57 Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Fri, 14 Dec 2018 14:29:38 +0530
Subject: [PATCH 10/12] Don't use \ in #include lines

Causes a build failure with MinGW, and is also against the convention
around path separators in #include lines.
---
 bzip2.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/bzip2.c b/bzip2.c
index 6de9d1d..dc626a4 100644
--- a/bzip2.c
+++ b/bzip2.c
@@ -128,7 +128,7 @@
 #if BZ_LCCWIN32
 #   include <io.h>
 #   include <fcntl.h>
-#   include <sys\stat.h>
+#   include <sys/stat.h>
 
 #   define NORETURN       /**/
 #   define PATH_SEP       '\\'
-- 
2.19.1


From 928fd716ecffa87f47d47585a9e09ff364c7689a Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Sat, 15 Dec 2018 03:41:52 +0530
Subject: [PATCH 11/12] meson: Set the dylib current_version as the project
 version

Just for completeness in ABI compatibility.
---
 meson.build | 1 +
 1 file changed, 1 insertion(+)

diff --git a/meson.build b/meson.build
index c2cb942..400a1c3 100644
--- a/meson.build
+++ b/meson.build
@@ -36,6 +36,7 @@ libbz2 = library('bz2', bzip2_sources,
   include_directories : bz2_incs,
   install : true,
   vs_module_defs : 'libbz2.def',
+  darwin_versions : ['1', meson.project_version()],
   kwargs : libkwargs,
 )
 
-- 
2.19.1


From d98301c372c5066c22410cb8323da08badd4de64 Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Sat, 15 Dec 2018 04:12:36 +0530
Subject: [PATCH 12/12] Don't use 'small' as a function prototype parameter

While using MinGW or targetting old Windows versions, windows.h defines
`small` as `char`, which results in a compiler error:

error: two or more data types in declaration specifiers
---
 bzlib.h | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/bzlib.h b/bzlib.h
index 8a0363d..5dd7461 100644
--- a/bzlib.h
+++ b/bzlib.h
@@ -111,7 +111,7 @@ BZ_EXTERN int BZ_API(BZ2_bzCompressEnd) (
 BZ_EXTERN int BZ_API(BZ2_bzDecompressInit) ( 
       bz_stream *strm, 
       int       verbosity, 
-      int       small
+      int       small_
    );
 
 BZ_EXTERN int BZ_API(BZ2_bzDecompress) ( 
@@ -135,7 +135,7 @@ BZ_EXTERN BZFILE* BZ_API(BZ2_bzReadOpen) (
       int*  bzerror,   
       FILE* f, 
       int   verbosity, 
-      int   small,
+      int   small_,
       void* unused,    
       int   nUnused 
    );
@@ -211,7 +211,7 @@ BZ_EXTERN int BZ_API(BZ2_bzBuffToBuffDecompress) (
       unsigned int* destLen,
       char*         source, 
       unsigned int  sourceLen,
-      int           small, 
+      int           small_,
       int           verbosity 
    );
 
-- 
2.19.1

