From 0da678ba380d62c28516a0a6a3bd32a9493a8149 Mon Sep 17 00:00:00 2001
From: Matthew Waters <matthew@centricular.com>
Date: Tue, 27 Mar 2018 19:10:26 +1100
Subject: [PATCH] asm: rename all sha*_block_data_order functions to not
 conflict with openssl

Otherwise including gnutls and openssl in the same library from static
components would produce duplicate symbols and fail to link.
---
 lib/accelerated/aarch64/elf/sha1-armv8.s         |  8 ++++----
 lib/accelerated/aarch64/elf/sha256-armv8.s       |  8 ++++----
 lib/accelerated/aarch64/elf/sha512-armv8.s       |  8 ++++----
 lib/accelerated/aarch64/sha-aarch64.c            | 12 ++++++------
 lib/accelerated/x86/coff/sha1-ssse3-x86_64.s     | 10 +++++-----
 lib/accelerated/x86/coff/sha512-ssse3-x86_64.s   | 10 +++++-----
 lib/accelerated/x86/elf/sha1-ssse3-x86.s         |  8 ++++----
 lib/accelerated/x86/elf/sha1-ssse3-x86_64.s      | 14 +++++++-------
 lib/accelerated/x86/elf/sha256-ssse3-x86.s       |  8 ++++----
 lib/accelerated/x86/elf/sha512-ssse3-x86.s       |  8 ++++----
 lib/accelerated/x86/elf/sha512-ssse3-x86_64.s    | 14 +++++++-------
 lib/accelerated/x86/macosx/sha1-ssse3-x86_64.s   |  2 +-
 lib/accelerated/x86/macosx/sha512-ssse3-x86_64.s |  2 +-
 lib/accelerated/x86/sha-x86-ssse3.c              | 12 ++++++------
 14 files changed, 62 insertions(+), 62 deletions(-)

diff --git a/lib/accelerated/aarch64/elf/sha1-armv8.s b/lib/accelerated/aarch64/elf/sha1-armv8.s
index 0dc68fe..d24ac5c 100644
--- a/lib/accelerated/aarch64/elf/sha1-armv8.s
+++ b/lib/accelerated/aarch64/elf/sha1-armv8.s
@@ -47,10 +47,10 @@
 .text
 
 
-.globl sha1_block_data_order
-.type sha1_block_data_order,%function
+.globl _sha1_block_data_order
+.type _sha1_block_data_order,%function
 .align 6
-sha1_block_data_order:
+_sha1_block_data_order:
 
 
 
@@ -1116,7 +1116,7 @@ sha1_block_data_order:
  ldp x27,x28,[sp,#80]
  ldr x29,[sp],#96
  ret
-.size sha1_block_data_order,.-sha1_block_data_order
+.size _sha1_block_data_order,.-_sha1_block_data_order
 .type sha1_block_armv8,%function
 .align 6
 sha1_block_armv8:
diff --git a/lib/accelerated/aarch64/elf/sha256-armv8.s b/lib/accelerated/aarch64/elf/sha256-armv8.s
index c055ce4..4c11afb 100644
--- a/lib/accelerated/aarch64/elf/sha256-armv8.s
+++ b/lib/accelerated/aarch64/elf/sha256-armv8.s
@@ -47,10 +47,10 @@
 .text
 
 
-.globl sha256_block_data_order
-.type sha256_block_data_order,%function
+.globl _sha256_block_data_order
+.type _sha256_block_data_order,%function
 .align 6
-sha256_block_data_order:
+_sha256_block_data_order:
 
 
 
@@ -1021,7 +1021,7 @@ sha256_block_data_order:
  ldp x27,x28,[x29,#80]
  ldp x29,x30,[sp],#128
  ret
-.size sha256_block_data_order,.-sha256_block_data_order
+.size _sha256_block_data_order,.-_sha256_block_data_order
 
 .align 6
 .type .LK256,%object
diff --git a/lib/accelerated/aarch64/elf/sha512-armv8.s b/lib/accelerated/aarch64/elf/sha512-armv8.s
index 8484f27..ef654fc 100644
--- a/lib/accelerated/aarch64/elf/sha512-armv8.s
+++ b/lib/accelerated/aarch64/elf/sha512-armv8.s
@@ -47,10 +47,10 @@
 .text
 
 
-.globl sha512_block_data_order
-.type sha512_block_data_order,%function
+.globl _sha512_block_data_order
+.type _sha512_block_data_order,%function
 .align 6
-sha512_block_data_order:
+_sha512_block_data_order:
  stp x29,x30,[sp,#-128]!
  add x29,sp,#0
 
@@ -1011,7 +1011,7 @@ sha512_block_data_order:
  ldp x27,x28,[x29,#80]
  ldp x29,x30,[sp],#128
  ret
-.size sha512_block_data_order,.-sha512_block_data_order
+.size _sha512_block_data_order,.-_sha512_block_data_order
 
 .align 6
 .type .LK512,%object
diff --git a/lib/accelerated/aarch64/sha-aarch64.c b/lib/accelerated/aarch64/sha-aarch64.c
index 5b68204..e9a0b23 100644
--- a/lib/accelerated/aarch64/sha-aarch64.c
+++ b/lib/accelerated/aarch64/sha-aarch64.c
@@ -31,9 +31,9 @@
 #include <sha-aarch64.h>
 #include <aarch64-common.h>
 
-void sha1_block_data_order(void *c, const void *p, size_t len);
-void sha256_block_data_order(void *c, const void *p, size_t len);
-void sha512_block_data_order(void *c, const void *p, size_t len);
+void _sha1_block_data_order(void *c, const void *p, size_t len);
+void _sha256_block_data_order(void *c, const void *p, size_t len);
+void _sha512_block_data_order(void *c, const void *p, size_t len);
 
 typedef void (*update_func) (void *, size_t, const uint8_t *);
 typedef void (*digest_func) (void *, size_t, uint8_t *);
@@ -108,7 +108,7 @@ void aarch64_sha1_update(struct sha1_ctx *ctx, size_t length,
 
 		t2 = length / SHA1_DATA_SIZE;
 
-		sha1_block_data_order(&octx, data, t2);
+		_sha1_block_data_order(&octx, data, t2);
 
 		for (i=0;i<t2;i++)
 			ctx->count++;
@@ -161,7 +161,7 @@ void aarch64_sha256_update(struct sha256_ctx *ctx, size_t length,
 
 	if (length > 0) {
 		t2 = length / SHA1_DATA_SIZE;
-		sha256_block_data_order(&octx, data, t2);
+		_sha256_block_data_order(&octx, data, t2);
 		
 		for (i=0;i<t2;i++)
 			ctx->count++;
@@ -212,7 +212,7 @@ void aarch64_sha512_update(struct sha512_ctx *ctx, size_t length,
 
 	if (length > 0) {
 		t2 = length / SHA512_DATA_SIZE;
-		sha512_block_data_order(&octx, data, t2);
+		_sha512_block_data_order(&octx, data, t2);
 		
 		for (i=0;i<t2;i++)
 			MD_INCR(ctx);
diff --git a/lib/accelerated/x86/coff/sha1-ssse3-x86_64.s b/lib/accelerated/x86/coff/sha1-ssse3-x86_64.s
index 13203c2..1a6c904 100644
--- a/lib/accelerated/x86/coff/sha1-ssse3-x86_64.s
+++ b/lib/accelerated/x86/coff/sha1-ssse3-x86_64.s
@@ -40,10 +40,10 @@
 .text	
 
 
-.globl	sha1_block_data_order
-.def	sha1_block_data_order;	.scl 2;	.type 32;	.endef
+.globl	_sha1_block_data_order
+.def	_sha1_block_data_order;	.scl 2;	.type 32;	.endef
 .p2align	4
-sha1_block_data_order:
+_sha1_block_data_order:
 	movq	%rdi,8(%rsp)
 	movq	%rsi,16(%rsp)
 	movq	%rsp,%rax
@@ -1337,9 +1337,9 @@ sha1_block_data_order:
 	movq	16(%rsp),%rsi
 	.byte	0xf3,0xc3
 .LSEH_end_sha1_block_data_order:
-.def	sha1_block_data_order_ssse3;	.scl 3;	.type 32;	.endef
+.def	_sha1_block_data_order_ssse3;	.scl 3;	.type 32;	.endef
 .p2align	4
-sha1_block_data_order_ssse3:
+_sha1_block_data_order_ssse3:
 	movq	%rdi,8(%rsp)
 	movq	%rsi,16(%rsp)
 	movq	%rsp,%rax
diff --git a/lib/accelerated/x86/coff/sha512-ssse3-x86_64.s b/lib/accelerated/x86/coff/sha512-ssse3-x86_64.s
index 034dab2..8eea2e9 100644
--- a/lib/accelerated/x86/coff/sha512-ssse3-x86_64.s
+++ b/lib/accelerated/x86/coff/sha512-ssse3-x86_64.s
@@ -40,10 +40,10 @@
 .text	
 
 
-.globl	sha256_block_data_order
-.def	sha256_block_data_order;	.scl 2;	.type 32;	.endef
+.globl	_sha256_block_data_order
+.def	_sha256_block_data_order;	.scl 2;	.type 32;	.endef
 .p2align	4
-sha256_block_data_order:
+_sha256_block_data_order:
 	movq	%rdi,8(%rsp)
 	movq	%rsi,16(%rsp)
 	movq	%rsp,%rax
@@ -1809,9 +1809,9 @@ K256:
 .long	0xffffffff,0xffffffff,0x03020100,0x0b0a0908
 .long	0xffffffff,0xffffffff,0x03020100,0x0b0a0908
 .byte	83,72,65,50,53,54,32,98,108,111,99,107,32,116,114,97,110,115,102,111,114,109,32,102,111,114,32,120,56,54,95,54,52,44,32,67,82,89,80,84,79,71,65,77,83,32,98,121,32,60,97,112,112,114,111,64,111,112,101,110,115,115,108,46,111,114,103,62,0
-.def	sha256_block_data_order_ssse3;	.scl 3;	.type 32;	.endef
+.def	_sha256_block_data_order_ssse3;	.scl 3;	.type 32;	.endef
 .p2align	6
-sha256_block_data_order_ssse3:
+_sha256_block_data_order_ssse3:
 	movq	%rdi,8(%rsp)
 	movq	%rsi,16(%rsp)
 	movq	%rsp,%rax
diff --git a/lib/accelerated/x86/elf/sha1-ssse3-x86.s b/lib/accelerated/x86/elf/sha1-ssse3-x86.s
index 7b585a0..888e94a 100644
--- a/lib/accelerated/x86/elf/sha1-ssse3-x86.s
+++ b/lib/accelerated/x86/elf/sha1-ssse3-x86.s
@@ -39,10 +39,10 @@
 #
 .file	"sha1-586.s"
 .text
-.globl	sha1_block_data_order
-.type	sha1_block_data_order,@function
+.globl	_sha1_block_data_order
+.type	_sha1_block_data_order,@function
 .align	16
-sha1_block_data_order:
+_sha1_block_data_order:
 .L_sha1_block_data_order_begin:
 	pushl	%ebp
 	pushl	%ebx
@@ -1412,7 +1412,7 @@ sha1_block_data_order:
 	popl	%ebx
 	popl	%ebp
 	ret
-.size	sha1_block_data_order,.-.L_sha1_block_data_order_begin
+.size	_sha1_block_data_order,.-.L_sha1_block_data_order_begin
 .byte	83,72,65,49,32,98,108,111,99,107,32,116,114,97,110,115
 .byte	102,111,114,109,32,102,111,114,32,120,56,54,44,32,67,82
 .byte	89,80,84,79,71,65,77,83,32,98,121,32,60,97,112,112
diff --git a/lib/accelerated/x86/elf/sha1-ssse3-x86_64.s b/lib/accelerated/x86/elf/sha1-ssse3-x86_64.s
index af40532..1523e2a 100644
--- a/lib/accelerated/x86/elf/sha1-ssse3-x86_64.s
+++ b/lib/accelerated/x86/elf/sha1-ssse3-x86_64.s
@@ -40,10 +40,10 @@
 .text	
 
 
-.globl	sha1_block_data_order
-.type	sha1_block_data_order,@function
+.globl	_sha1_block_data_order
+.type	_sha1_block_data_order,@function
 .align	16
-sha1_block_data_order:
+_sha1_block_data_order:
 	movl	_gnutls_x86_cpuid_s+0(%rip),%r9d
 	movl	_gnutls_x86_cpuid_s+4(%rip),%r8d
 	testl	$512,%r8d
@@ -1326,10 +1326,10 @@ sha1_block_data_order:
 	leaq	32(%rsi),%rsp
 .Lepilogue:
 	.byte	0xf3,0xc3
-.size	sha1_block_data_order,.-sha1_block_data_order
-.type	sha1_block_data_order_ssse3,@function
+.size	_sha1_block_data_order,.-_sha1_block_data_order
+.type	_sha1_block_data_order_ssse3,@function
 .align	16
-sha1_block_data_order_ssse3:
+_sha1_block_data_order_ssse3:
 _ssse3_shortcut:
 	pushq	%rbx
 	pushq	%rbp
@@ -2495,7 +2495,7 @@ _ssse3_shortcut:
 	leaq	24(%rsi),%rsp
 .Lepilogue_ssse3:
 	.byte	0xf3,0xc3
-.size	sha1_block_data_order_ssse3,.-sha1_block_data_order_ssse3
+.size	_sha1_block_data_order_ssse3,.-_sha1_block_data_order_ssse3
 .align	64
 K_XX_XX:
 .long	0x5a827999,0x5a827999,0x5a827999,0x5a827999	
diff --git a/lib/accelerated/x86/elf/sha256-ssse3-x86.s b/lib/accelerated/x86/elf/sha256-ssse3-x86.s
index 7470ef7..e6eca12 100644
--- a/lib/accelerated/x86/elf/sha256-ssse3-x86.s
+++ b/lib/accelerated/x86/elf/sha256-ssse3-x86.s
@@ -39,10 +39,10 @@
 #
 .file	"sha512-586.s"
 .text
-.globl	sha256_block_data_order
-.type	sha256_block_data_order,@function
+.globl	_sha256_block_data_order
+.type	_sha256_block_data_order,@function
 .align	16
-sha256_block_data_order:
+_sha256_block_data_order:
 .L_sha256_block_data_order_begin:
 	pushl	%ebp
 	pushl	%ebx
@@ -3392,7 +3392,7 @@ sha256_block_data_order:
 	popl	%ebx
 	popl	%ebp
 	ret
-.size	sha256_block_data_order,.-.L_sha256_block_data_order_begin
+.size	_sha256_block_data_order,.-.L_sha256_block_data_order_begin
 .byte	83,72,65,50,53,54,32,98,108,111,99,107,32,116,114,97
 .byte	110,115,102,111,114,109,32,102,111,114,32,120,56,54,44,32
 .byte	67,82,89,80,84,79,71,65,77,83,32,98,121,32,60,97
diff --git a/lib/accelerated/x86/elf/sha512-ssse3-x86.s b/lib/accelerated/x86/elf/sha512-ssse3-x86.s
index 0b99b22..67c1ff5 100644
--- a/lib/accelerated/x86/elf/sha512-ssse3-x86.s
+++ b/lib/accelerated/x86/elf/sha512-ssse3-x86.s
@@ -39,10 +39,10 @@
 #
 .file	"sha512-586.s"
 .text
-.globl	sha512_block_data_order
-.type	sha512_block_data_order,@function
+.globl	_sha512_block_data_order
+.type	_sha512_block_data_order,@function
 .align	16
-sha512_block_data_order:
+_sha512_block_data_order:
 .L_sha512_block_data_order_begin:
 	pushl	%ebp
 	pushl	%ebx
@@ -594,7 +594,7 @@ sha512_block_data_order:
 .long	4234509866,1501505948
 .long	987167468,1607167915
 .long	1246189591,1816402316
-.size	sha512_block_data_order,.-.L_sha512_block_data_order_begin
+.size	_sha512_block_data_order,.-.L_sha512_block_data_order_begin
 .byte	83,72,65,53,49,50,32,98,108,111,99,107,32,116,114,97
 .byte	110,115,102,111,114,109,32,102,111,114,32,120,56,54,44,32
 .byte	67,82,89,80,84,79,71,65,77,83,32,98,121,32,60,97
diff --git a/lib/accelerated/x86/elf/sha512-ssse3-x86_64.s b/lib/accelerated/x86/elf/sha512-ssse3-x86_64.s
index d51d816..f2a9b57 100644
--- a/lib/accelerated/x86/elf/sha512-ssse3-x86_64.s
+++ b/lib/accelerated/x86/elf/sha512-ssse3-x86_64.s
@@ -40,10 +40,10 @@
 .text	
 
 
-.globl	sha256_block_data_order
-.type	sha256_block_data_order,@function
+.globl	_sha256_block_data_order
+.type	_sha256_block_data_order,@function
 .align	16
-sha256_block_data_order:
+_sha256_block_data_order:
 	leaq	_gnutls_x86_cpuid_s(%rip),%r11
 	movl	0(%r11),%r9d
 	movl	4(%r11),%r10d
@@ -1755,7 +1755,7 @@ sha256_block_data_order:
 	leaq	48(%rsi),%rsp
 .Lepilogue:
 	.byte	0xf3,0xc3
-.size	sha256_block_data_order,.-sha256_block_data_order
+.size	_sha256_block_data_order,.-_sha256_block_data_order
 .align	64
 .type	K256,@object
 K256:
@@ -1799,9 +1799,9 @@ K256:
 .long	0xffffffff,0xffffffff,0x03020100,0x0b0a0908
 .long	0xffffffff,0xffffffff,0x03020100,0x0b0a0908
 .byte	83,72,65,50,53,54,32,98,108,111,99,107,32,116,114,97,110,115,102,111,114,109,32,102,111,114,32,120,56,54,95,54,52,44,32,67,82,89,80,84,79,71,65,77,83,32,98,121,32,60,97,112,112,114,111,64,111,112,101,110,115,115,108,46,111,114,103,62,0
-.type	sha256_block_data_order_ssse3,@function
+.type	_sha256_block_data_order_ssse3,@function
 .align	64
-sha256_block_data_order_ssse3:
+_sha256_block_data_order_ssse3:
 .Lssse3_shortcut:
 	pushq	%rbx
 	pushq	%rbp
@@ -2885,7 +2885,7 @@ sha256_block_data_order_ssse3:
 	leaq	48(%rsi),%rsp
 .Lepilogue_ssse3:
 	.byte	0xf3,0xc3
-.size	sha256_block_data_order_ssse3,.-sha256_block_data_order_ssse3
+.size	_sha256_block_data_order_ssse3,.-_sha256_block_data_order_ssse3
 
 
 .section .note.GNU-stack,"",%progbits
diff --git a/lib/accelerated/x86/macosx/sha1-ssse3-x86_64.s b/lib/accelerated/x86/macosx/sha1-ssse3-x86_64.s
index 79c10de..5ec4ffe 100644
--- a/lib/accelerated/x86/macosx/sha1-ssse3-x86_64.s
+++ b/lib/accelerated/x86/macosx/sha1-ssse3-x86_64.s
@@ -1329,7 +1329,7 @@ L$epilogue:
 
 
 .p2align	4
-sha1_block_data_order_ssse3:
+_sha1_block_data_order_ssse3:
 _ssse3_shortcut:
 	pushq	%rbx
 	pushq	%rbp
diff --git a/lib/accelerated/x86/macosx/sha512-ssse3-x86_64.s b/lib/accelerated/x86/macosx/sha512-ssse3-x86_64.s
index 7e73227..be79615 100644
--- a/lib/accelerated/x86/macosx/sha512-ssse3-x86_64.s
+++ b/lib/accelerated/x86/macosx/sha512-ssse3-x86_64.s
@@ -1801,7 +1801,7 @@ K256:
 .byte	83,72,65,50,53,54,32,98,108,111,99,107,32,116,114,97,110,115,102,111,114,109,32,102,111,114,32,120,56,54,95,54,52,44,32,67,82,89,80,84,79,71,65,77,83,32,98,121,32,60,97,112,112,114,111,64,111,112,101,110,115,115,108,46,111,114,103,62,0
 
 .p2align	6
-sha256_block_data_order_ssse3:
+_sha256_block_data_order_ssse3:
 L$ssse3_shortcut:
 	pushq	%rbx
 	pushq	%rbp
diff --git a/lib/accelerated/x86/sha-x86-ssse3.c b/lib/accelerated/x86/sha-x86-ssse3.c
index d73039e..ec7f7c0 100644
--- a/lib/accelerated/x86/sha-x86-ssse3.c
+++ b/lib/accelerated/x86/sha-x86-ssse3.c
@@ -31,9 +31,9 @@
 #include <sha-x86.h>
 #include <x86-common.h>
 
-void sha1_block_data_order(void *c, const void *p, size_t len);
-void sha256_block_data_order(void *c, const void *p, size_t len);
-void sha512_block_data_order(void *c, const void *p, size_t len);
+void _sha1_block_data_order(void *c, const void *p, size_t len);
+void _sha256_block_data_order(void *c, const void *p, size_t len);
+void _sha512_block_data_order(void *c, const void *p, size_t len);
 
 typedef void (*update_func) (void *, size_t, const uint8_t *);
 typedef void (*digest_func) (void *, size_t, uint8_t *);
@@ -110,7 +110,7 @@ void x86_sha1_update(struct sha1_ctx *ctx, size_t length,
 
 		t2 = length / SHA1_DATA_SIZE;
 
-		sha1_block_data_order(&octx, data, t2);
+		_sha1_block_data_order(&octx, data, t2);
 
 		for (i=0;i<t2;i++)
 			ctx->count++;
@@ -163,7 +163,7 @@ void x86_sha256_update(struct sha256_ctx *ctx, size_t length,
 
 	if (length > 0) {
 		t2 = length / SHA1_DATA_SIZE;
-		sha256_block_data_order(&octx, data, t2);
+		_sha256_block_data_order(&octx, data, t2);
 		
 		for (i=0;i<t2;i++)
 			ctx->count++;
@@ -215,7 +215,7 @@ void x86_sha512_update(struct sha512_ctx *ctx, size_t length,
 
 	if (length > 0) {
 		t2 = length / SHA512_DATA_SIZE;
-		sha512_block_data_order(&octx, data, t2);
+		_sha512_block_data_order(&octx, data, t2);
 		
 		for (i=0;i<t2;i++)
 			MD_INCR(ctx);
-- 
2.16.2

